import os
import numpy as np

RANDOM_SEED = int(os.environ["RANDOM_SEED"])
# RANDOM_SEED = 42
np.random.seed(RANDOM_SEED)

from runner import Runner

# Choose from META_LEARNING_MODE from the following:
# - DIRECT_MEANS
# - DIRECT_SCORE_WEIGHTED_MEANS
# - DIRECT_GENETIC_ALGORITHM_MATING
# - GRADUAL_MEANS
# - GRADUAL_SCORE_WEIGHTED_MEANS
# - GRADUAL_GENETIC_ALGORITHM_MATING
# - NO_META_LEARNING

# META_LEARNING_MODE = "NO_META_LEARNING"
META_LEARNING_MODE = os.getenv("meta_learning_mode")
if META_LEARNING_MODE is None:
    raise ValueError("No meta learning mode specified.")

# Choose from AGGREGATION_METHOD from the following:
# AGGREGATION_METHOD = "WEIGHTED_AVERAGE_RECENCY"
# - AVERAGE_AGGREGATION
# - FIXED_CLIPPED_AVERAGE_AGGREGATION
# - DYNAMIC_CLIPPED_AVERAGE_AGGREGATION
# - MEDIAN_AGGREGATION
# - WEIGHTED_AVERAGE_PERFORMANCE_SCORES
# - WEIGHTED_AVERAGE_RECENCY
# - WEIGHTED_AVERAGE_PUNISHING_UPDATES

# AGGREGATION_METHOD = "AVERAGE_AGGREGATION"
AGGREGATION_METHOD = os.getenv("aggregation_method")
if AGGREGATION_METHOD is None:
    raise ValueError("No meta learning mode specified.")

r = Runner(META_LEARNING_MODE, AGGREGATION_METHOD)
r.run()